{
	"name": "ArtistStage_to_DIM",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Snowflake_ds",
						"type": "DatasetReference"
					},
					"name": "ArtistStage"
				},
				{
					"dataset": {
						"referenceName": "Snowflake_ds",
						"type": "DatasetReference"
					},
					"name": "ArtistDIM"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Snowflake_ds",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "joinSourceTgt"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ArtistId as decimal(38,0),",
				"          Name as string,",
				"          Created_By as string,",
				"          Created_Dt as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> ArtistStage",
				"source(output(",
				"          ARTIST_KEY as decimal(10,0),",
				"          ARTIST_ID as decimal(10,0),",
				"          ARTIST_NAME as string,",
				"          HASH_VALUE as string,",
				"          SOURCE_ID as string,",
				"          DATE_TO_WAREHOUSE as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> ArtistDIM",
				"ArtistStage, ArtistDIM join(ArtistId == ARTIST_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinSourceTgt",
				"joinSourceTgt keyGenerate(output(artistkey as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 derive(source_hash_value = sha2(256, concat(    coalesce(Name,''))),",
				"          CREATED_BY = \"Pranjal\",",
				"          CREATED_DT = currentDate()) ~> derivedColumn1",
				"derivedColumn1 alterRow(insertIf(iifNull(ArtistId,0,ARTIST_ID)==0),",
				"     updateIf(ArtistId==ARTIST_ID),",
				"     updateIf(source_hash_value!=HASH_VALUE)) ~> alterRow1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:true,",
				"     insertable:true,",
				"     updateable:true,",
				"     upsertable:true,",
				"     keys:['ARTIST_KEY'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          ARTIST_ID = ArtistId,",
				"          ARTIST_NAME = Name,",
				"          ARTIST_KEY = artistkey,",
				"          HASH_VALUE = source_hash_value,",
				"          SOURCE_ID = derivedColumn1@CREATED_BY,",
				"          DATE_TO_WAREHOUSE = derivedColumn1@CREATED_DT",
				"     )) ~> sink1"
			]
		}
	}
}